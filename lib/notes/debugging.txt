###############################################################################
# 12-25-16: ###################################################################
• Adding explanatory note to recurring issue with turbolinks and jQuery:
: see `pins.coffee` for working solution (hack?), and its source:
: http://stackoverflow.com/questions/18770517/rails-4-how-to-use-document-ready-with-turbo-links
###############################################################################


###############################################################################
# 12-11-16: ###################################################################
• Adding explanatory note to the strong params gotcha from 12-8-16:
: see cocoon gem author's alert notice:
  https://github.com/nathanvda/cocoon#strong-parameters-gotcha
###############################################################################


###############################################################################
# 12-8-16: ####################################################################
• Updating devise User deletes associated nested Profile  !!!
: /app/views/devise/registrations/edit.html.haml:
    =form_for resource ... =fields_for :profile ...

• Reason (read from server output):
  > Unpermitted parameter: id
: turns out nested fields have a hidden field for `id` of the nested resource
  ( in this case: user[profile_attributes][id] )

• Solution:
: profile.id (profile_attributes[:id]) must be permitted
  in devise_parameter_sanitizer (presently in ApplicationController):
  ...
    devise_parameter_sanitizer.permit( :sign_up, keys: [ profile_attributes: [:id, ...] ] )
  ...
###############################################################################



###############################################################################
• Working out updating a singular resource (profile):
# 12-8-16: ####################################################################
• Order matters but the 12-7-16 "solution" had its own downfall:
: Drawing resources as both, singular and plural competes for path helper names.
: Specifically (showing only the conflicting directives), in
    resource  :profile,  only: :update
    resources :profiles, only: :index
: both directives claim `profile_path`, but only the 1st is named, the 2nd is nameless:
    put '/profile',      to: 'profiles#update', as: 'profile'
    get '/profiles/:id', to: 'profiles#index'
: Now profile(s) paths and path helpers are broken; it's a mess. Particularly
  since `profile_path` is to be used in `form_for @profile, url:profile_path ..`
  per http://guides.rubyonrails.org/routing.html#singular-resources

• Solution: set up `update_profile_path` to keep other path helpers named
  consistently with Rails conventions. Plus, `update_..`, although nowhere declared
  by Rails, actually is consistent with Rails path naming conventions; looks clean.

• routes.rb
    resources :profiles,      only: [:index, :show]
    # resource :profile,      only: :edit # declare manually for visual consistency:
    get       'profile/edit', to: 'profiles#edit',   as: 'edit_profile'
    match     'profile',      to: 'profiles#update', as: 'update_profile', via: [:patch, :put]

# 12-7-16: ####################################################################
• from http://guides.rubyonrails.org/routing.html#singular-resources
    A long-standing bug prevents form_for from working automatically with singular
    resources. As a workaround, specify the URL for the form directly, like so:

    form_for @geocoder, url: geocoder_path do |f|

: But `simple_form_for @profile, url: profile_path ..` yielded error message:
    ActionController::UrlGenerationError at /my_profile
    No route matches {:action=>"show", :controller=>"profiles"} missing
    required keys: [:id]
: The issue was, of course, order of drawing :profiles and :profile
: Drawing :profiles 1st returns:
    GET /profiles/:id, to: profiles#show, as: profile_path
: Solution: drawing :profile 1st returns the needed:
    PATCH|PUT /profile, to: profiles#update, as: profile_path

• routes.rb:
    resource  :profile,  only: [:edit, :update]
    resources :profiles, only: [:index, :show]
###############################################################################
